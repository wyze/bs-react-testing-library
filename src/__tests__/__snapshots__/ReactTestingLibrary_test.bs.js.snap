// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReactTestingLibrary ByAltText findAllByAltText works 1`] = `
Array [
  <img
    alt="Incredibles 2 Poster"
    src="/incredibles-2.png"
  />,
]
`;

exports[`ReactTestingLibrary ByAltText findByAltText works 1`] = `
<img
  alt="Incredibles 2 Poster"
  src="/incredibles-2.png"
/>
`;

exports[`ReactTestingLibrary ByAltText getAllByAltText works 1`] = `
Array [
  <img
    alt="Incredibles 2 Poster"
    src="/incredibles-2.png"
  />,
]
`;

exports[`ReactTestingLibrary ByAltText getByAltText works 1`] = `
<img
  alt="Incredibles 2 Poster"
  src="/incredibles-2.png"
/>
`;

exports[`ReactTestingLibrary ByAltText queryAllByAltText works 1`] = `
Array [
  <img
    alt="Incredibles 2 Poster"
    src="/incredibles-2.png"
  />,
]
`;

exports[`ReactTestingLibrary ByAltText queryByAltText works (element not found) 1`] = `null`;

exports[`ReactTestingLibrary ByAltText queryByAltText works 1`] = `
<img
  alt="Incredibles 2 Poster"
  src="/incredibles-2.png"
/>
`;

exports[`ReactTestingLibrary ByDisplayValue findAllByDisplayValue works 1`] = `
Array [
  <input
    id="lastName"
    type="text"
    value="ReasonML"
  />,
]
`;

exports[`ReactTestingLibrary ByDisplayValue findByDisplayValue works 1`] = `
<input
  id="lastName"
  type="text"
  value="ReasonML"
/>
`;

exports[`ReactTestingLibrary ByDisplayValue getAllByDisplayValue works 1`] = `
Array [
  <input
    id="lastName"
    type="text"
    value="ReasonML"
  />,
]
`;

exports[`ReactTestingLibrary ByDisplayValue getByDisplayValue works 1`] = `
<input
  id="lastName"
  type="text"
  value="ReasonML"
/>
`;

exports[`ReactTestingLibrary ByDisplayValue queryAllByDisplayValue works 1`] = `
Array [
  <input
    id="lastName"
    type="text"
    value="ReasonML"
  />,
]
`;

exports[`ReactTestingLibrary ByDisplayValue queryByDisplayValue works (element not found) 1`] = `null`;

exports[`ReactTestingLibrary ByDisplayValue queryByDisplayValue works 1`] = `
<input
  id="lastName"
  type="text"
  value="ReasonML"
/>
`;

exports[`ReactTestingLibrary ByLabelText findAllByLabelText works 1`] = `
Array [
  <input
    id="username-input"
  />,
]
`;

exports[`ReactTestingLibrary ByLabelText findByLabelText works 1`] = `
<input
  id="username-input"
/>
`;

exports[`ReactTestingLibrary ByLabelText getAllByLabelText works 1`] = `
Array [
  <input
    id="username-input"
  />,
]
`;

exports[`ReactTestingLibrary ByLabelText getByLabelText works 1`] = `
<input
  id="username-input"
/>
`;

exports[`ReactTestingLibrary ByLabelText queryAllByLabelText works 1`] = `
Array [
  <input
    id="username-input"
  />,
]
`;

exports[`ReactTestingLibrary ByLabelText queryByLabelText works (element not found) 1`] = `null`;

exports[`ReactTestingLibrary ByLabelText queryByLabelText works 1`] = `
<input
  id="username-input"
/>
`;

exports[`ReactTestingLibrary ByPlaceholderText findAllByPlaceholderText works 1`] = `
Array [
  <input
    placeholder="Username"
  />,
]
`;

exports[`ReactTestingLibrary ByPlaceholderText findByPlaceholderText works 1`] = `
<input
  placeholder="Username"
/>
`;

exports[`ReactTestingLibrary ByPlaceholderText getAllByPlaceholderText works 1`] = `
Array [
  <input
    placeholder="Username"
  />,
]
`;

exports[`ReactTestingLibrary ByPlaceholderText getByPlaceholderText works 1`] = `
<input
  placeholder="Username"
/>
`;

exports[`ReactTestingLibrary ByPlaceholderText queryAllByPlaceholderText works 1`] = `
Array [
  <input
    placeholder="Username"
  />,
]
`;

exports[`ReactTestingLibrary ByPlaceholderText queryByPlaceholderText works (element not found) 1`] = `null`;

exports[`ReactTestingLibrary ByPlaceholderText queryByPlaceholderText works 1`] = `
<input
  placeholder="Username"
/>
`;

exports[`ReactTestingLibrary ByRole findAllByRole works 1`] = `
Array [
  <button>
    Close dialog
  </button>,
]
`;

exports[`ReactTestingLibrary ByRole findByRole works 1`] = `
<button>
  Close dialog
</button>
`;

exports[`ReactTestingLibrary ByRole getAllByRole works 1`] = `
Array [
  <button>
    Close dialog
  </button>,
]
`;

exports[`ReactTestingLibrary ByRole getByRole works 1`] = `
<button>
  Close dialog
</button>
`;

exports[`ReactTestingLibrary ByRole queryAllByRole works 1`] = `
Array [
  <button>
    Close dialog
  </button>,
]
`;

exports[`ReactTestingLibrary ByRole queryByRole works (element not found) 1`] = `null`;

exports[`ReactTestingLibrary ByRole queryByRole works 1`] = `
<button>
  Close dialog
</button>
`;

exports[`ReactTestingLibrary ByTestId findAllByTestId works 1`] = `
Array [
  <h1
    data-testid="h1-heading"
  >
    Heading
  </h1>,
]
`;

exports[`ReactTestingLibrary ByTestId findByTestId works 1`] = `
<h1
  data-testid="h1-heading"
>
  Heading
</h1>
`;

exports[`ReactTestingLibrary ByTestId getAllByTestId works 1`] = `
Array [
  <h1
    data-testid="h1-heading"
  >
    Heading
  </h1>,
]
`;

exports[`ReactTestingLibrary ByTestId getByTestId works 1`] = `
<h1
  data-testid="h1-heading"
>
  Heading
</h1>
`;

exports[`ReactTestingLibrary ByTestId queryAllByTestId works 1`] = `
Array [
  <h1
    data-testid="h1-heading"
  >
    Heading
  </h1>,
]
`;

exports[`ReactTestingLibrary ByTestId queryByTestId works (element not found) 1`] = `null`;

exports[`ReactTestingLibrary ByTestId queryByTestId works 1`] = `
<h1
  data-testid="h1-heading"
>
  Heading
</h1>
`;

exports[`ReactTestingLibrary ByText findAllByText works 1`] = `
Array [
  <a
    href="/about"
  >
    About ℹ️
  </a>,
]
`;

exports[`ReactTestingLibrary ByText findByText works 1`] = `
<a
  href="/about"
>
  About ℹ️
</a>
`;

exports[`ReactTestingLibrary ByText getAllByText works 1`] = `
Array [
  <a
    href="/about"
  >
    About ℹ️
  </a>,
]
`;

exports[`ReactTestingLibrary ByText getByText works 1`] = `
<a
  href="/about"
>
  About ℹ️
</a>
`;

exports[`ReactTestingLibrary ByText queryAllByText works 1`] = `
Array [
  <a
    href="/about"
  >
    About ℹ️
  </a>,
]
`;

exports[`ReactTestingLibrary ByText queryByText works (element not found) 1`] = `null`;

exports[`ReactTestingLibrary ByText queryByText works 1`] = `
<a
  href="/about"
>
  About ℹ️
</a>
`;

exports[`ReactTestingLibrary ByTitle findAllByTitle works 1`] = `
Array [
  <span
    id="2"
    title="Delete"
  />,
]
`;

exports[`ReactTestingLibrary ByTitle findByTitle works 1`] = `
<span
  id="2"
  title="Delete"
/>
`;

exports[`ReactTestingLibrary ByTitle getAllByTitle works 1`] = `
Array [
  <span
    id="2"
    title="Delete"
  />,
]
`;

exports[`ReactTestingLibrary ByTitle getByTitle works 1`] = `
<span
  id="2"
  title="Delete"
/>
`;

exports[`ReactTestingLibrary ByTitle queryAllByTitle works 1`] = `
Array [
  <span
    id="2"
    title="Delete"
  />,
]
`;

exports[`ReactTestingLibrary ByTitle queryByTitle works (element not found) 1`] = `null`;

exports[`ReactTestingLibrary ByTitle queryByTitle works 1`] = `
<span
  id="2"
  title="Delete"
/>
`;

exports[`ReactTestingLibrary act works 1`] = `
<div>
  Count: 1
  <button>
    +
  </button>
  <button>
    -
  </button>
</div>
`;

exports[`ReactTestingLibrary asFragment works 1`] = `
<DocumentFragment>
  <div
    style="color: rebeccapurple;"
  >
    <h1
      data-testid="h1-heading"
    >
      Heading
    </h1>
  </div>
</DocumentFragment>
`;

exports[`ReactTestingLibrary render works 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        style="color: rebeccapurple;"
      >
        <h1
          data-testid="h1-heading"
        >
          Heading
        </h1>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      style="color: rebeccapurple;"
    >
      <h1
        data-testid="h1-heading"
      >
        Heading
      </h1>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
